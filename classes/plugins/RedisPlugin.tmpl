
{{ header }}

if [ "$START_{{softwareComponentName|upper}}" = "YES" ]; then

{{ preparecomp }}

{{ getsource }}

{{ prestart }}

if [ "${{typeSourceVarName}}" == "docker" ]; then
  # run in docker
  if [ ! -f "{{pidFile}}" ]; then
    startDockerNetwork
    {{writeDockerConnectionLogic}}
    {{writeConfigFiles}}
    verbosePrint "docker run --rm -d -p {{ExposedPort}}:{{ExposedPort}} --net={{systemName|lower}}net --name={{softwareComponentName}} $ADD_HOST_INTERNAL {{mountToDocker}} {{AllEnvVarsDocker}} {{DockerImage}}:${{typeSourceVarName}}_VERSION"
    {{dcId}}=$(docker run --rm -d -p {{ExposedPort}}:{{ExposedPort}} \
      --net={{systemName|lower}}net --name={{softwareComponentName}} $ADD_HOST_INTERNAL \
      {{mountToDocker}} {{AllEnvVarsDocker}} {{DockerImage}}:${{typeSourceVarName}}_VERSION)
    echo "${{dcId}}">{{pidFile}}
  else
    {{dcId}}=$(<{{pidFile}})
    echo "Reusing already running instance ${{dcId}}"
  fi
fi
if [ "${{typeSourceVarName}}" == "local" ]; then
  if [ -f "{{pidFile}}" ]; then
    echo "redis {{softwareComponentName}} running but started from different source type"
    exit 1
  fi
fi

{{ poststart }}

{{ leavecomp }}

fi
